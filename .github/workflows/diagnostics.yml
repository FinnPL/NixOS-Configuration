name: "Quick NixOS Diagnostics"

on:
  workflow_dispatch: # Manual trigger
  push:
    branches: [ main, master ]
    paths: [ '**.nix' ]

jobs:
  diagnose:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Nix
      uses: cachix/install-nix-action@v25
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

    - name: Basic flake diagnostics
      run: |
        echo "üîç Nix Environment:"
        nix --version
        nix flake show --json | head -20
        
        echo "üîç Flake inputs:"
        nix flake metadata
        
        echo "üîç System evaluation test:"
        nix eval .#nixosConfigurations.centaur.config.system.name || echo "‚ùå System eval failed"
        
        echo "üîç Kernel configuration:"
        nix eval .#nixosConfigurations.centaur.config.boot.kernelPackages.kernel.pname || echo "‚ùå Kernel eval failed"
        nix eval .#nixosConfigurations.centaur.config.boot.kernelPackages.kernel.version || echo "‚ùå Kernel version eval failed"
        
        echo "üîç Home Manager test:"
        nix eval .#nixosConfigurations.centaur.config.home-manager --apply 'x: "hm-configured"' || echo "‚ùå Home Manager not configured"

    - name: Dry run with error capture
      run: |
        echo "üîç Performing focused dry run..."
        nix build .#nixosConfigurations.centaur.config.system.build.toplevel --dry-run --verbose 2>&1 | \
        grep -E "(error|failed|missing|not found|store.*not.*nix)" | \
        head -20 || echo "‚úÖ No obvious errors in dry run"

    - name: Check problematic components
      run: |
        echo "üîç Testing individual components..."
        
        echo "Testing bootloader:"
        nix eval .#nixosConfigurations.centaur.config.boot.loader.systemd-boot.enable || echo "‚ùå Bootloader eval failed"
        
        echo "Testing kernel packages:"
        nix eval .#nixosConfigurations.centaur.config.boot.kernelPackages.kernel.drvPath || echo "‚ùå Kernel package eval failed"
        
        echo "Testing hyprland:"
        nix eval .#nixosConfigurations.centaur.config.programs.hyprland.enable || echo "‚ùå Hyprland eval failed"
        
        echo "Testing environment packages:"
        nix eval .#nixosConfigurations.centaur.config.environment.systemPackages --apply 'pkgs: builtins.length pkgs' || echo "‚ùå System packages eval failed"

    - name: Store path investigation
      run: |
        echo "üîç Store path analysis..."
        echo "Total store items: $(find /nix/store -maxdepth 1 -type d | wc -l)"
        echo "Linux-related items: $(find /nix/store -name "*linux*" -type d | wc -l)"
        echo "Module-related items: $(find /nix/store -name "*module*" -type d | wc -l)"
        
        echo "Sample Linux store paths:"
        find /nix/store -name "*linux*" -type d | head -5 || echo "No Linux paths found"
      continue-on-error: true
